{"version":3,"sources":["constants/index.js","App.js","actions/WeatherActions.js","reducers/WeatherReducer.js","store.js","index.js"],"names":["GET_WEATHER_REQUEST","GET_WEATHER_ERROR","GET_WEATHER_SUCCESS","styles","mainContainer","marginTop","marginBottom","cardContainer","minHeight","width","padding","display","justifyContent","alignItems","flexFlow","cardRow","margin","headerCardContainer","headerCardRow","weatherDescription","footerCard","App","useState","search","setSearch","open","setOpen","dispatch","useDispatch","handleClose","useEffect","navigator","geolocation","getCurrentPosition","position","lat","long","coords","latitude","longitude","type","payload","loading","fetch","process","then","response","ok","error","res","json","data","weather","alert","useSelector","state","console","log","Grid","container","style","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","variant","message","item","lg","md","sm","xs","Card","CircularProgress","disableShrink","Fragment","Typography","component","name","sys","country","main","Math","floor","temp","className","src","icon","alt","description","wind","deg","ceil","speed","clouds","all","TextField","onChange","e","target","value","Button","background","color","onClick","getState","a","checkFetch","getWeather","disabled","initialState","reducer","combineReducers","action","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b1a072b.chunk.js","sourcesContent":["export const GET_WEATHER_REQUEST = \"GET_WEATHER_REQUEST\";\r\nexport const GET_WEATHER_ERROR = \"GET_WEATHER_ERROR\";\r\nexport const GET_WEATHER_SUCCESS = \"GET_WEATHER_SUCCESS\";\r\n","import {\n    Grid,\n    Card,\n    Typography,\n    TextField,\n    Button,\n    CircularProgress,\n    Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport { getWeather, getWeatherByLatLong } from \"./actions/WeatherActions\";\n\nfunction App() {\n    const [search, setSearch] = useState(\"\");\n    const [open, setOpen] = useState(false);\n    const dispatch = useDispatch();\n    const handleSubmit = () => {\n        dispatch(getWeather(search));\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n    useEffect(() => {\n        navigator.geolocation\n            ? navigator.geolocation.getCurrentPosition((position) => {\n                  dispatch(\n                      getWeatherByLatLong(\n                          position.coords.latitude,\n                          position.coords.longitude\n                      )\n                  );\n              })\n            : alert(\"Please enter an existing city\");\n    }, [dispatch]);\n\n    const { loading, weather, error } = useSelector((state) => state.weather);\n\n    useEffect(() => {\n        if (error) {\n            setOpen(true);\n        }\n    }, [error, weather, loading]);\n    console.log(error);\n    return (\n        <Grid\n            container={true}\n            justifyContent=\"center\"\n            style={styles.mainContainer}\n        >\n            <Snackbar\n                open={open}\n                autoHideDuration={2000}\n                onClose={handleClose}\n                anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n            >\n                <MuiAlert\n                    onClose={handleClose}\n                    severity=\"error\"\n                    variant=\"filled\"\n                >\n                    {weather.message && \"City not found!!\"}\n                </MuiAlert>\n            </Snackbar>\n            <Grid container={true} item={true} lg={9} md={12} sm={12} xs={12}>\n                <Grid\n                    container={true}\n                    justifyContent=\"center\"\n                    item={true}\n                    xs={12}\n                    style={{ padding: \"0 1rem\", marginBottom: \"2rem\" }}\n                >\n                    <Card style={styles.headerCardContainer}>\n                        {loading ? (\n                            <CircularProgress disableShrink />\n                        ) : (\n                            <React.Fragment>\n                                <div style={styles.headerCardRow}>\n                                    <Typography component=\"h2\" variant=\"h6\">\n                                        {weather.name\n                                            ? `${weather.name} - ${weather.sys.country}`\n                                            : \"Please search a city name below.\"}\n                                    </Typography>\n                                </div>\n                                <div style={styles.headerCardRow}>\n                                    <Typography component=\"h2\" variant=\"h6\">\n                                        {weather.main\n                                            ? `${Math.floor(\n                                                  weather.main.temp - 273.15\n                                              )}  Â°C`\n                                            : \"\"}\n                                    </Typography>\n                                </div>\n                            </React.Fragment>\n                        )}\n                    </Card>\n                </Grid>\n                <Grid\n                    container={true}\n                    justifyContent=\"center\"\n                    item={true}\n                    lg={4}\n                    xs={12}\n                    style={{ padding: \"0 1rem\" }}\n                >\n                    <Card\n                        style={styles.cardContainer}\n                        className={\"card-container\"}\n                    >\n                        {loading ? (\n                            <CircularProgress disableShrink />\n                        ) : (\n                            <React.Fragment>\n                                <div>\n                                    {weather.weather ? (\n                                        <img\n                                            src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n                                            alt=\"weather icon\"\n                                        />\n                                    ) : (\n                                        <img\n                                            src={`http://openweathermap.org/img/wn/10d@2x.png`}\n                                            alt=\"weather icon\"\n                                        />\n                                    )}\n                                </div>\n                                <div style={styles.weatherDescription}>\n                                    {weather.weather\n                                        ? weather.weather[0].description\n                                        : \"Sunny Day\"}\n                                </div>\n                            </React.Fragment>\n                        )}\n                    </Card>\n                </Grid>\n                <Grid\n                    container={true}\n                    justifyContent=\"center\"\n                    item={true}\n                    lg={4}\n                    xs={12}\n                    style={{ padding: \"0 1rem\" }}\n                >\n                    <Card\n                        style={styles.cardContainer}\n                        className={\"card-container\"}\n                    >\n                        {loading ? (\n                            <CircularProgress disableShrink />\n                        ) : (\n                            <React.Fragment>\n                                <div style={styles.cardRow}>\n                                    <Typography>Wind Speed</Typography>\n                                </div>\n                                <div style={styles.cardRow}>\n                                    <Typography>\n                                        {\" \"}\n                                        {weather.wind\n                                            ? weather.wind.deg\n                                            : 0}{\" \"}\n                                        &deg;\n                                    </Typography>{\" \"}\n                                    <Typography>\n                                        {\" \"}\n                                        {weather.wind\n                                            ? ` - ${Math.ceil(\n                                                  (weather.wind.speed / 1000) *\n                                                      3600\n                                              )}`\n                                            : ` 0`}{\" \"}\n                                        kph\n                                    </Typography>\n                                </div>\n                            </React.Fragment>\n                        )}\n                    </Card>\n                </Grid>\n                <Grid\n                    container={true}\n                    justifyContent=\"center\"\n                    item={true}\n                    lg={4}\n                    xs={12}\n                    style={{ padding: \"0 1rem\" }}\n                >\n                    <Card\n                        style={styles.cardContainer}\n                        className={\"card-container\"}\n                    >\n                        {loading ? (\n                            <CircularProgress disableShrink />\n                        ) : (\n                            <React.Fragment>\n                                <div style={styles.cardRow}>\n                                    <Typography>Clouds Count</Typography>\n                                </div>\n                                <div style={styles.cardRow}>\n                                    <Typography>\n                                        {\" \"}\n                                        {weather.clouds\n                                            ? weather.clouds.all\n                                            : 0}\n                                    </Typography>\n                                </div>\n                            </React.Fragment>\n                        )}\n                    </Card>\n                </Grid>\n                <Grid container={true} justifyContent=\"center\">\n                    <Card style={styles.footerCard}>\n                        <div style={styles.headerCardRow}>\n                            <TextField\n                                variant=\"outlined\"\n                                name=\"search\"\n                                onChange={(e) => setSearch(e.target.value)}\n                            />\n                        </div>\n                        <div style={styles.headerCardRow}>\n                            <Button\n                                variant=\"contained\"\n                                style={{\n                                    background: !search ? \"#E5E5E5\" : \"#009ef6\",\n                                    color: \"#ffffff\",\n                                    marginTop: \"1rem\",\n                                }}\n                                onClick={handleSubmit}\n                                disabled={!search}\n                            >\n                                {\" \"}\n                                Search{\" \"}\n                            </Button>\n                        </div>\n                    </Card>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nconst styles = {\n    mainContainer: {\n        marginTop: \"3rem\",\n        marginBottom: \"3rem\",\n    },\n    cardContainer: {\n        minHeight: \"25rem\",\n        width: \"100%\",\n        padding: \"2rem\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexFlow: \"column wrap\",\n        marginBottom: \"1rem\",\n    },\n    cardRow: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        margin: \"2rem 0\",\n    },\n    headerCardContainer: {\n        width: \"100%\",\n        padding: \"2rem\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexFlow: \"column wrap\",\n    },\n    headerCardRow: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    weatherDescription: {\n        margin: \"1rem 0 2rem\",\n    },\n    footerCard: {\n        padding: \"2rem\",\n        marginTop: \"1rem\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexFlow: \"column wrap\",\n    },\n};\n\nexport default App;\n","import {\r\n    GET_WEATHER_ERROR,\r\n    GET_WEATHER_REQUEST,\r\n    GET_WEATHER_SUCCESS,\r\n} from \"../constants\";\r\n\r\nexport const getWeather = (search) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: GET_WEATHER_REQUEST,\r\n        payload: {\r\n            loading: true,\r\n        },\r\n    });\r\n    const checkFetch = (response) => {\r\n        if (!response.ok) {\r\n            dispatch({\r\n                type: GET_WEATHER_ERROR,\r\n                payload: {\r\n                    loading: false,\r\n                    error: \"Please enter and existing city.\",\r\n                },\r\n            });\r\n        }\r\n        return response;\r\n    };\r\n    fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${[search]}&appid=${\r\n            process.env.REACT_APP_API_KEY\r\n        }`\r\n    )\r\n        .then(checkFetch)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            dispatch({\r\n                type: GET_WEATHER_SUCCESS,\r\n                payload: {\r\n                    loading: false,\r\n                    weather: data,\r\n                    error: null,\r\n                },\r\n            });\r\n        });\r\n};\r\n\r\nexport const getWeatherByLatLong = (lat, long) => (dispatch) => {\r\n    dispatch({\r\n        type: GET_WEATHER_REQUEST,\r\n        payload: {\r\n            loading: true,\r\n        },\r\n    });\r\n    const checkFetch = (response) => {\r\n        if (!response.ok) {\r\n            dispatch({\r\n                type: GET_WEATHER_ERROR,\r\n                payload: {\r\n                    loading: false,\r\n                    error: \"Please enter and existing city.\",\r\n                },\r\n            });\r\n        }\r\n        return response;\r\n    };\r\n    fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${process.env.REACT_APP_API_KEY}`\r\n    )\r\n        .then(checkFetch)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            dispatch({\r\n                type: GET_WEATHER_SUCCESS,\r\n                payload: {\r\n                    loading: false,\r\n                    weather: data,\r\n                    error: null,\r\n                },\r\n            });\r\n        });\r\n};\r\n","import {\r\n    GET_WEATHER_ERROR,\r\n    GET_WEATHER_SUCCESS,\r\n    GET_WEATHER_REQUEST,\r\n} from \"../constants\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    weather: {},\r\n    error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_WEATHER_REQUEST:\r\n        case GET_WEATHER_ERROR:\r\n        case GET_WEATHER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport WeatherReducer from \"./reducers/WeatherReducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst reducer = combineReducers({\r\n    weather: WeatherReducer,\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}